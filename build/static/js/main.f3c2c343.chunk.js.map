{"version":3,"sources":["assets/logo.png","demo/react-logo.svg","component/Header.tsx","util/constants.ts","util/util.tsx","component/Login.tsx","component/Register.tsx","demo/Demo.tsx","component/TextLink.tsx","component/About.tsx","model/Listing.ts","component/DatePicker.tsx","component/NewListing.tsx","model/AuthTypes.ts","component/Listing.tsx","component/Body.tsx","component/App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","Header","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","Navbar","color","light","expand","react_router_dom","to","HOME_PATH","src","Logo","alt","className","Nav","navbar","NavItem","ABOUT_PATH","CREATE_LISTING_PATH","loginOrAccountLink","LOGIN_PATH","React","DEFAULT_AXIOS_POST_CONFIG","headers","Content-Type","ACCESS_TOKEN_KEY","TEXTAREA_FIELD_TYPE","axiosErrorToMessage","error","isUndefined","response","message","data","notify","alert","hashPassword","unhashed","hash","update","digest","makeFieldAndErrors","fieldName","errors","touched","placeholder","fieldType","length","undefined","formik_esm","type","name","maybeShowValidationError","Login","_this","react_default","a","createElement","initialValues","email","password","onSubmit","values","attemptLogin","style","paddingTop","REGISTER_PATH","loginRequest","_this2","axios","post","API_PATH","then","success","localStorage","setItem","access_token","props","history","push","userId","Component","AUTH_API_PATH","Register","confirmPassword","attemptRegister","validationSchema","VALIDATION_SCHEMA","_ref","registerRequest","_success","MIN_PASSWORD_LENGTH","MAX_PASSWORD_LENGTH","MIN_NAME_LENGTH","Yup","shape","required","min","max","oneOf","Demo","logo","href","target","rel","TextLink","margin","url","text","About","display","fontSize","TextLink_TextLink","LISTINGS_API_PATH","concat","DatePicker","call","react_dates","startDate","startDateId","endDate","endDateId","onDatesChange","derp","console","focusedInput","onFocusChange","input","states","available","label","unavailable","selectable","NewListing","address","description","price","attemptCreateNewListing","component","makeTextAreaFieldAndErrors","DatePicker_DatePicker","listing","path","authToken","getItem","Promise","reject","postOptions","Authorization","Axios","postWithAuthToken","LISTING_PATH","listingId","MIN_DESCRIPTION_LENGTH","Listing","state","match","params","get","setState","formatPrice","priceFormatter","format","Intl","NumberFormat","currency","Body","react_router","DEMO_PATH","LISTING_ID_PATH","USER_ID_PATH","App","basename","Header_Header","Body_Body","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f3c2c343.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8338261a.png\";","module.exports = __webpack_public_path__ + \"static/media/react-logo.5d5d9eef.svg\";","import 'bootstrap/dist/css/bootstrap.css';\nimport * as React from 'react';\nimport { Navbar, Nav, NavItem } from 'reactstrap';\nimport { HOME_PATH, LOGIN_PATH, ABOUT_PATH, CREATE_LISTING_PATH } from './App';\nimport Logo from '../assets/logo.png';\nimport '../css/Header.css';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport class Header extends React.Component {\n\n    render(): JSX.Element {\n        return <div>\n            <Navbar color='faded' light expand='md'>\n                <Link to={HOME_PATH}><img src={Logo} alt='logo' className='App-logo' /></Link>\n                <Nav navbar>\n                    <NavItem><NavLink to={ABOUT_PATH}>About</NavLink></NavItem>\n                    <NavItem><NavLink to={CREATE_LISTING_PATH}>Create a listing</NavLink></NavItem>\n                    <NavItem>{this.loginOrAccountLink()}</NavItem>\n                </Nav>\n            </Navbar>\n        </div>;\n    }\n\n    private loginOrAccountLink(): JSX.Element {\n        return <NavLink to={LOGIN_PATH}>Login</NavLink>;\n    }\n}\n","// export const SERVER_API_PATH = 'https://airbnme-jsonbe.herokuapp.com/';\nexport const SERVER_API_PATH = 'http://localhost:8080/';\n\nexport const DEFAULT_AXIOS_POST_CONFIG = {\n    headers: {\n        'Content-Type': 'application/json'\n    }\n};\n\nexport const ACCESS_TOKEN_KEY = 'airbnmeToken';\n\nexport const REQUIRED_TEXT = 'Required';\n\nexport const PASSWORD_FIELD_NAME = 'password',\n    CONFIRM_PASSWORD_FIELD_NAME = 'confirmPassword',\n    EMAIL_FIELD_NAME = 'email',\n    NAME_FIELD_NAME = 'name',\n    ADDRESS_FIELD_NAME = 'address',\n    DESCRIPTION_FIELD_NAME = 'description',\n    PRICE_FIELD_NAME = 'price',\n    STRING_FIELD_TYPE = 'string',\n    TEXTAREA_FIELD_TYPE = 'textarea';\n","import * as hash from 'hash.js';\nimport * as React from 'react';\nimport { FormikTouched, Field } from 'formik';\nimport { TEXTAREA_FIELD_TYPE } from './constants';\nimport { AxiosError } from 'axios';\nimport { isUndefined } from 'util';\nimport '../css/App.css';\n\nexport function isNonEmptyString(value: any): boolean {\n    return typeof value === 'string' &&\n        value !== null &&\n        value !== undefined;\n}\n\nexport function axiosErrorToMessage(error: AxiosError): string {\n    if (isUndefined(error.response)) {\n        return error.message;\n    } else {\n        return error.response.data.message;\n    }\n}\n\nexport function notify(message: any): void {\n    alert(message);\n}\n\nexport function notifyError(message: string): void {\n    notify('Error: ' + message);\n}\n\nexport function hashPassword(unhashed: string): string {\n    return hash.sha384().update(hash.sha384().update(unhashed)).digest('hex');\n}\n\nexport function makeFieldAndErrors<S, T extends keyof S>(\n    fieldName: T,\n    errors: S,\n    touched: FormikTouched<S>,\n    placeholder: string,\n    fieldType: string = fieldName as string\n): JSX.Element {\n\n    return <div className='input-field'>\n        <Field type={fieldType} name={fieldName} placeholder={placeholder} />\n        {maybeShowValidationError(fieldName, errors, touched)}\n    </div >;\n}\n\nexport function makeTextAreaFieldAndErrors<S, T extends keyof S>(\n    fieldName: T,\n    errors: S,\n    touched: FormikTouched<S>,\n    placeholder: string,\n    fieldType: string = fieldName as string\n): JSX.Element {\n    return <div>\n        <Field type={fieldType} name={fieldName} placeholder={placeholder} component={TEXTAREA_FIELD_TYPE} />\n        {maybeShowValidationError(fieldName, errors, touched)}\n    </div >;\n}\n\nfunction maybeShowValidationError<S, T extends keyof S>(fieldName: T, errors: S, touched: FormikTouched<S>): S[T] | undefined {\n    return errors[fieldName] && touched[fieldName] ?\n        errors[fieldName] :\n        undefined;\n}\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport axios from 'axios';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { REGISTER_PATH, HOME_PATH } from './App';\nimport { LoginRequest, AUTH_API_PATH } from '../model/AuthTypes';\nimport { DEFAULT_AXIOS_POST_CONFIG, ACCESS_TOKEN_KEY } from '../util/constants';\nimport { notify, hashPassword, axiosErrorToMessage } from '../util/util';\nimport '../css/App.css';\n\nexport class Login extends React.Component<RouteComponentProps<{}>> {\n\n    private static readonly API_PATH = AUTH_API_PATH + 'login';\n\n    render() {\n        return <div>\n            <h3>Login</h3>\n            <Formik\n                initialValues={{ email: '', password: '' }}\n                onSubmit={(values) => this.attemptLogin(values)} >\n                <Form>\n                    <Field type='email' name='email' placeholder='email@gmail.com' className='input-field' />\n                    <Field type='password' name='password' placeholder='Password' className='input-field' />\n                    <button type='submit' className='input-field'>Login</button>\n                </Form>\n            </Formik>\n            <h6 style={ { paddingTop: '12px' }}>New to AirbnMe?</h6>\n            <Link to={REGISTER_PATH}><button>Create an account</button></Link>\n        </div>\n    }\n\n    private attemptLogin(loginRequest: LoginRequest): void {\n        const password = hashPassword(loginRequest.password);\n        axios.post(\n            Login.API_PATH,\n            { email: loginRequest.email, password },\n            DEFAULT_AXIOS_POST_CONFIG\n        ).then(\n            (success) => {\n                localStorage.setItem(ACCESS_TOKEN_KEY, success.data.access_token);\n                this.props.history.push(HOME_PATH, { userId: success.data.userId });\n            },\n            (error) => notify('Login failed - ' + axiosErrorToMessage(error))\n        )\n    }\n}","import React from \"react\";\nimport axios, { AxiosError } from 'axios';\nimport { Formik, Form } from \"formik\";\nimport { RouteComponentProps } from \"react-router\";\nimport * as Yup from 'yup';\nimport { RegisterRequest, AUTH_API_PATH } from \"../model/AuthTypes\";\nimport { DEFAULT_AXIOS_POST_CONFIG, REQUIRED_TEXT, PASSWORD_FIELD_NAME, EMAIL_FIELD_NAME, CONFIRM_PASSWORD_FIELD_NAME, NAME_FIELD_NAME, STRING_FIELD_TYPE } from \"../util/constants\";\nimport { notify, hashPassword, makeFieldAndErrors, axiosErrorToMessage } from \"../util/util\";\nimport { LOGIN_PATH } from \"./App\";\n\ninterface RegisterFields {\n    email?: string;\n    password?: string;\n    confirmPassword?: string;\n    name?: string;\n}\n\nexport class Register extends React.Component<RouteComponentProps<{}>> {\n\n    private static readonly MIN_PASSWORD_LENGTH = 6;\n    private static readonly MAX_PASSWORD_LENGTH = 30;\n    private static readonly MIN_NAME_LENGTH = 1;\n    private static readonly API_PATH = AUTH_API_PATH + 'register';\n\n    private static readonly VALIDATION_SCHEMA =\n        Yup.object().shape({\n            email: Yup.string()\n                .email()\n                .required(REQUIRED_TEXT),\n            password: Yup.string()\n                .min(Register.MIN_PASSWORD_LENGTH)\n                .max(Register.MAX_PASSWORD_LENGTH)\n                .required(REQUIRED_TEXT),\n            confirmPassword: Yup.string()\n                .oneOf([Yup.ref(PASSWORD_FIELD_NAME)], 'Passwords must match')\n                .required(REQUIRED_TEXT),\n            name: Yup.string()\n                .min(Register.MIN_NAME_LENGTH)\n                .required(REQUIRED_TEXT)\n        });\n\n    render() {\n        return <div>\n            <Formik\n                initialValues={{ email: '', password: '', confirmPassword: '', name: '' }}\n                onSubmit={(values) => this.attemptRegister(values as any)}\n                validationSchema={Register.VALIDATION_SCHEMA}\n            >\n                {({ errors, touched }) =>\n                    <Form>\n                        {makeFieldAndErrors(EMAIL_FIELD_NAME, errors, touched, 'email@gmail.com')}\n                        {makeFieldAndErrors(PASSWORD_FIELD_NAME, errors, touched, 'Password')}\n                        {makeFieldAndErrors(CONFIRM_PASSWORD_FIELD_NAME, errors, touched, 'Confirm Password', PASSWORD_FIELD_NAME)}\n                        {makeFieldAndErrors(NAME_FIELD_NAME, errors, touched, 'Will Smith', STRING_FIELD_TYPE)}\n                        <div><button type='submit'>Register</button></div>\n                    </Form>\n                }\n            </Formik>\n        </div>;\n    }\n\n    private attemptRegister(registerRequest: RegisterRequest): void {\n        const password = hashPassword(registerRequest.password);\n        axios.post(\n            Register.API_PATH,\n            { email: registerRequest.email, password, name: registerRequest.name },\n            DEFAULT_AXIOS_POST_CONFIG\n        ).then(\n            (_success) => {\n                notify('Registration success!');\n                this.props.history.push(LOGIN_PATH);\n            },\n            (error: AxiosError) => notify('Registration failed - ' + axiosErrorToMessage(error))\n        );\n    }\n\n}\n","import React from \"react\";\nimport logo from './react-logo.svg';\n\nexport class Demo extends React.Component {\n    render() {\n        return (\n            <div>\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <p>\n                        Edit <code>src/App.js</code> and save to reload.\n        </p>\n                    <a\n                        className=\"App-link\"\n                        href=\"https://reactjs.org\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        Learn React\n        </a>\n                </header>\n\n            </div>\n        )\n    }\n}","import * as React from 'react';\n\ninterface TextLinkProps {\n    url: string;\n    text: string;\n}\n\nexport class TextLink extends React.Component<TextLinkProps> {\n    render(): JSX.Element {\n        return <a style={ { margin: '4px' } } href={this.props.url} target='_blank' rel=\"noopener noreferrer\" >{this.props.text}</a>;\n    }\n}","import * as React from \"react\";\nimport { TextLink } from \"./TextLink\";\n\nexport class About extends React.Component {\n    render(): JSX.Element {\n        return <div>\n            <h1>THIS IS AIRBNME</h1>\n            <p>A little website inspired by a \n            <a style={{ display: 'inline' }} href='https://twitter.com/dontplaynojames/status/1020568969965473793' target='_blank' rel=\"noopener noreferrer\" > tweet </a>\n             of Geoffrey James where anyone can post their accommodation and only I can book it :) </p>\n             <p style={ { fontSize: '6pt' }}>(how bout that spinning logo tho)</p>\n            <TextLink url='https://www.linkedin.com/in/willsmithte/' text='My LinkedIn' />\n            <TextLink url='https://github.com/WillSmithTE/' text='My GitHub' />\n        </div>;\n    }\n}\n","import { SERVER_API_PATH } from \"../util/constants\";\n\nexport interface ListingModel {\n    name: string;\n    address: string;\n    description: string;\n    price: number;\n}\n\nexport const LISTINGS_API_PATH = `${SERVER_API_PATH}listing`;\n","import 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport '../css/DatePicker.css';\nimport React from \"react\";\nimport { DateRangePicker } from 'react-dates';\n\nexport class DatePicker extends React.Component<{}, any> {\n\n    private static states = {\n        available: {\n            color: '#000000',\n            label: 'Available'\n        },\n        unavailable: {\n            selectable: false,\n            color: '#595f69',\n            label: 'Unavailable'\n        }\n    };\n\n    constructor(props: {}) {\n        super(props);\n    }\n\n    render(): JSX.Element {\n        return <DateRangePicker\n        startDate={null}\n        startDateId='derp'\n        endDate={null}\n        endDateId='herp'\n        onDatesChange={(derp) => console.error(derp) }\n        focusedInput={null}\n        onFocusChange={(input) => console.error(input)}\n        />;\n    }\n\n}","import * as React from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form } from 'formik';\nimport { REQUIRED_TEXT, NAME_FIELD_NAME, STRING_FIELD_TYPE, DESCRIPTION_FIELD_NAME, ADDRESS_FIELD_NAME, PRICE_FIELD_NAME } from '../util/constants';\nimport { ListingModel, LISTINGS_API_PATH } from '../model/Listing';\nimport { makeFieldAndErrors, makeTextAreaFieldAndErrors, notifyError, axiosErrorToMessage } from '../util/util';\nimport { RouteComponentProps } from 'react-router';\nimport { postWithAuthToken } from '../model/AuthTypes';\nimport { LISTING_PATH } from './App';\nimport { DatePicker } from './DatePicker';\n\nexport class NewListing extends React.Component<RouteComponentProps<{}>> {\n\n    private static readonly MIN_NAME_LENGTH: number = 2;\n    private static readonly MIN_DESCRIPTION_LENGTH: number = 10;\n    private static readonly API_PATH: string = LISTINGS_API_PATH + '/new';\n\n    private static readonly VALIDATION_SCHEMA = Yup.object().shape({\n        name: Yup.string()\n            .min(NewListing.MIN_NAME_LENGTH)\n            .required(REQUIRED_TEXT),\n        address: Yup.string()\n            .min(NewListing.MIN_NAME_LENGTH)\n            .required(REQUIRED_TEXT),\n        description: Yup.string()\n            .min(NewListing.MIN_DESCRIPTION_LENGTH)\n            .required(REQUIRED_TEXT),\n        price: Yup.number()\n            .required(REQUIRED_TEXT)\n    });\n\n    render(): JSX.Element {\n        return <div>\n            <h1>Create your listing</h1>\n            <Formik\n                initialValues={{ name: '', address: '', description: '', price: '' }}\n                onSubmit={(values) => this.attemptCreateNewListing(values as any)}\n                validationSchema={NewListing.VALIDATION_SCHEMA} >\n                {({ errors, touched }) =>\n                    <Form>\n                        {makeFieldAndErrors(NAME_FIELD_NAME, errors, touched, 'The Palace', STRING_FIELD_TYPE)}\n                        {makeTextAreaFieldAndErrors(DESCRIPTION_FIELD_NAME, errors, touched, 'Describe your place :)')}\n                        {makeFieldAndErrors(ADDRESS_FIELD_NAME, errors, touched, '25, Buckingham Road, England', STRING_FIELD_TYPE)}\n                        {makeFieldAndErrors(PRICE_FIELD_NAME, errors, touched, '80', STRING_FIELD_TYPE)}\n                        <div><button type='submit'>Post</button></div>\n                    </Form>\n                }\n            </Formik>\n            <DatePicker />\n        </div >;\n    }\n\n    private attemptCreateNewListing(listing: ListingModel): void {\n        postWithAuthToken(NewListing.API_PATH, listing).then(\n            (success) => this.props.history.push(`${LISTING_PATH}/${success.data.listingId}`),\n            (error) => notifyError(axiosErrorToMessage(error))\n        );\n    }\n}\n","import { SERVER_API_PATH, ACCESS_TOKEN_KEY } from \"../util/constants\";\nimport Axios, { AxiosResponse, AxiosRequestConfig } from \"axios\";\n\nexport const AUTH_API_PATH = SERVER_API_PATH + 'auth/';\n\nexport interface LoginRequest {\n    readonly email: string;\n    readonly password: string;\n}\n\nexport interface RegisterRequest extends LoginRequest {\n    readonly name: string;\n}\n\nexport function postWithAuthToken(path: string, data: {}): Promise<AxiosResponse<any>> {\n    const authToken: string | null = localStorage.getItem(ACCESS_TOKEN_KEY);\n\n    if (authToken === null) {\n        return Promise.reject(`Unable to find auth token`);\n    } else {\n        const postOptions: AxiosRequestConfig = {\n            headers: {\n                'Authorization': `Bearer ${authToken}`,\n                'Content-Type': 'application/json'\n            }\n        };\n        return Axios.post(path, data, postOptions);\n    }\n}\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport Axios, { AxiosResponse } from \"axios\";\nimport { LISTINGS_API_PATH, ListingModel } from \"../model/Listing\";\n\ninterface ListingId {\n    listingId: string | undefined;\n}\ninterface ListingState extends ListingId {\n    listing: ListingModel | undefined;\n}\n\nexport class Listing extends React.Component<RouteComponentProps<ListingId>, ListingState> {\n\n    private static priceFormatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n    });\n\n    constructor(props: RouteComponentProps<ListingId>) {\n        super(props);\n        this.state = {\n            listingId: props.match.params.listingId,\n            listing: undefined\n        };\n        Axios.get(`${LISTINGS_API_PATH}/${this.state.listingId}`).then(\n            (response: AxiosResponse<ListingModel>) => {\n                this.setState({ listing: response.data });\n            }\n        )\n    }\n\n    render(): JSX.Element {\n        if (this.state.listing === undefined) {\n            return <div></div>;\n        } else {\n            return <div>\n                <h1>{this.state.listing.name}</h1>\n                <p>{this.state.listing.description}</p>\n                <p>{Listing.formatPrice(this.state.listing.price)}</p>\n            </div>;\n        }\n    }\n\n    private static formatPrice(price: number): string {\n        return Listing.priceFormatter.format(price);\n    }\n}","import * as React from 'react';\nimport { Route } from 'react-router';\nimport { LOGIN_PATH, REGISTER_PATH, DEMO_PATH, ABOUT_PATH, CREATE_LISTING_PATH, LISTING_PATH, USER_ID_PATH as LISTING_ID_PATH } from './App';\nimport { Login } from './Login';\nimport { Register } from './Register';\nimport { Demo } from '../demo/Demo';\nimport { About } from './About';\nimport { NewListing } from './NewListing';\nimport '../css/Body.css';\nimport { Listing } from './Listing';\n\nexport class Body extends React.Component {\n\n    render(): JSX.Element {\n        return <div>\n            <Route path={LOGIN_PATH} component={Login} />\n            <Route path={REGISTER_PATH} component={Register} />\n            <Route path={DEMO_PATH} component={Demo} />\n            <Route path={ABOUT_PATH} component={About} />\n            <Route path={CREATE_LISTING_PATH} component={NewListing} />\n            <Route path={LISTING_PATH + LISTING_ID_PATH} component={Listing} />\n\n            <h2 className='bottomStrip'>A WILL SMITH PRODUCTION</h2>\n        </div>;\n\n    }\n}","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport '../css/App.css';\nimport { Header } from './Header';\nimport { Body } from './Body';\n\nexport const LOGIN_PATH: string = '/login',\n  DEMO_PATH: string = '/demo',\n  HOME_PATH: string = '/',\n  ABOUT_PATH: string = '/about',\n  CREATE_LISTING_PATH: string = '/create-listing',\n  REGISTER_PATH: string = '/register',\n  LISTING_PATH: string = '/places',\n  USER_ID_PATH = '/:listingId';\n\nexport class App extends React.Component {\n\n  render() {\n    return <div className=\"App\">\n      <BrowserRouter basename={HOME_PATH}>\n\n        <Header />\n        <Body />\n\n      </BrowserRouter>\n    </div>;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './component/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}